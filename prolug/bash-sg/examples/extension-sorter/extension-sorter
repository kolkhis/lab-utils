#!/bin/bash

# - [x] Take in a directory (take as input? argument? user input (interactive?)? )
# - [x] Get a list of files in that directory
# - [x] Get the file extensions of each file in the directory
# - [x] Make directories based on the file extensions that are present
# - [x] Move the files to the correct directory based on their extensions 
#   - E.g., .txt files go into the `txt/` directory

declare DIR
DIR='.'

declare -a FILES
declare -a FILE_EXTENSIONS


# help read
IFS=$'\n' read -r -d '' -a FILES < <(find "$DIR" -maxdepth 1 -type f \! -wholename "${BASH_SOURCE[0]}")

printf "File: %s\n" "${FILES[@]}"

for file in "${FILES[@]}"; do 
    file_extension="${file##*.}"
    printf "Parsing file extension for: %s\n" "$file"
    file_regex="\<$file_extension\>"
    if [[ "${FILE_EXTENSIONS[*]}" =~ $file_regex ]]; then
        printf "File extension is already in array: %s\n" "$file_extension"
        continue
    fi
    FILE_EXTENSIONS+=("$file_extension")
    printf "file extension for: %s\n" "${file##*.}"
done

printf "Parsed file extensions.\n"
printf "File Extension: %s\n" "${FILE_EXTENSIONS[@]}"


# mkdir md txt jpeg png sh
mkdir "${FILE_EXTENSIONS[@]}" || {
    printf >&2 "[ERROR]: Couldn't create all directories!\n"
}

# - [x] Move the files to the correct directory based on their extensions 
# Loop over FILE_EXTENSIONS arr, copy over all matching files to dir


for ext in "${FILE_EXTENSIONS[@]}"; do
    printf "Moving all %s files to the %s directory\n" "$ext" "$ext"
    for f in *."$ext"; do
        printf "Moving File: %s %s\n" "$DIR/$f" "$DIR/$ext/$f"
        mv "$DIR/$f" "$DIR/$ext/$f"
    done

done

printf "Done!\n"



# DIR="$1"
# ./extension-sorter '.'


