#!/bin/bash
#===============================================================================
#
#          FILE:  admin-u16-s2
#
#         USAGE:  ./admin-u16-s2
#
#   DESCRIPTION:  This script verifies the conditions for the second scenario for the
#                 unit 16 lab of the ProLUG Linux admin course:
#                 https://professionallinuxusersgroup.github.io/lac/u16lab.html#scenario-2
#                 Verifies that there are 3 extra disks (xvd.) with at least 3GB of
#                 space each for the student to use with LVM.
#
#
#       OPTIONS:  There are currently no options for this script.
#  REQUIREMENTS:  Rocky Linux 9.x (dnf, rpm), bash >= 4.4
#        AUTHOR:  Connor W. (https://github.com/kolkhis)
#       CREATED:  2025-08-17
#
#===============================================================================

declare SCENARIO='
    A ticket has come in that a mount point, /space, is not working correctly. 
    The team expected a 9GB partition to be built there on the 3 attached disks, but found
    that it was not a separate partition.

    Verify that /space is not set up correctly.
'

check-disks() {
    local disk_size
    local -a EXTRA_DISKS
    IFS=$'\n' read -r -d '' -a EXTRA_DISKS < <(
        lsblk | grep -i 'xvd[b-z]' | awk '{ printf "%s ", $1; printf "%s\n", $4}'
    )
    # verify that there are at least 3 extra disks
    [[ "${#EXTRA_DISKS[@]}" -ge 3 ]] || {
        printf >&2 "ERROR:  Bad number of disks.\n" && return 1
    } 

    # verify disk size
    for disk in "${EXTRA_DISKS[@]}"; do
        [[ -z $disk ]] && continue
        disk_size="$(tr -d '[:alpha:]' <<< "${disk##* }")"
        if (( disk_size < 3 )); then
            printf >&2 -- "ERROR: Disk: %s -- Does not have 3GB available.\n" "${disk%% *}"
            return 1
        fi
    done
}

check-disks || {
    printf >&2 "\nERROR:  Lab verification failed. Encountered a problem with the disks.\n"
    printf >&2 "\tPlease report this problem to an administrator.\n\n"
    exit 1
}

printf -- "\n-- Lab successfully setup: Linux Admin Course - Unit 16, Scenario 2 --\n\n"
printf "Scenario: %s\n" "$SCENARIO"
exit 0
