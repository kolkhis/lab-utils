#!/bin/bash

declare -A COMPLETED

[[ ! -f ~/.ssh/id_ed25519.pub ]] && {
    printf "There is no key to copy to the hosts in ~/.ssh! Generate a key with 'ssh-keygen -t ed25519'"
    exit 1
}


while [[ -n $1 ]]; do
    case $1 in
        -u|--user)
            [[ -n $2 ]] && {
                USERNAME=$2
                printf "Set username to %s\n" "${USERNAME}"
            }
            shift; shift;
            ;;
        *)
            printf "Unknown option: %s\n" "$1"
            shift;
            ;;
    esac
done
: "${USERNAME:=$USER}"
printf "Using user: %s\n" "${USERNAME}"

while read -r l; do
    if [[ $l == *ansible_host* ]]; then
        NODE=$(printf "%s" "$l" | awk -F '[ =]' '{ for(i=1; i< NF; i++) if($i == "ansible_host") print $(i+1) }')
        if [[ $NODE =~ [0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3} ]]; then
            printf "Checking node %s\n" "${NODE}"

            if [[ ! "${COMPLETED[$NODE]-}" ]]; then
                printf "\033[33mNode: %s not completed. Using ssh-copy-id to copy key...\033[0m\n" "$NODE"
                {
                    ssh-copy-id "${USERNAME}@${NODE}" && COMPLETED[$NODE]=true &&
                        printf "\033[32mNode successfully added: %s\n\033[0m" "${NODE}"
                } || {
                    printf "\033[31mProblem with ssh-copy-id with node %s\n\033[0m" "${NODE}"
                }
            else
                printf "\033[32m%s already completed. Skipping.\n\033[0m" "${NODE}"
                continue
            fi

        fi
    fi
done < ./playbooks/hosts

