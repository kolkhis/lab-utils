#!/bin/bash

declare CHROOT_DIR='/var/chroot'
declare JAILED_USER='juvie'

declare -a BINARIES
BINARIES=("bash" "rbash" "ssh")

declare -a SYSFILES=(
    "/etc/passwd"
    "/etc/group"
    "/etc/nsswitch.conf"
    "/etc/hosts"
)

declare -a SPECIAL_FILES=(
    "/dev/null "
    "/dev/tty" 
    "/dev/zero"
    "/dev/random"
    "/dev/urandom"
)




declare VERBOSE=0
while [[ -n $1 ]]; do
    case $1 in
        -v|--verbose)
            VERBOSE=1
            shift;
            ;;
        -h|--help)
            # TODO: Add help text
            :
            ;;
    esac
done

debug() {
    [[ -n $VERBOSE ]] && printf "[\033[33m DEBUG \033[0m]: %s\n" "$@"
}

setup-jailed-user() {
    :
}

setup-chroot-dir() {
    
    printf "Setting up chroot jail environment.\n"

    for SYSFILE in "${SYSFILES[@]}"; do
        printf "Copying system file: %s\n" "$SYSFILE"
        if [[ ! -d  "${CHROOT_DIR}/$(dirname "$SYSFILE")" ]]; then
            printf "Creating directory for %s at %s\n" "$SYSFILE" "$CHROOT_DIR/$(basename "$SYSFILE")"

            # # Make the directory for the system file
            # mkdir -p "${CHROOT_DIR}/$(dirname "$SYSFILE")"  || {
            #     printf >&2 "Failed to create directory (%s) for %s!\n" \
            #         "$(dirname "$SYSFILE")" \
            #         "$SYSFILE"
            # }

        fi
        printf "Copying system file %s to %s\n" "$SYSFILE" "${CHROOT_DIR}/$SYSFILE"
        cp "$SYSFILE" "$CHROOT_DIR/$SYSFILE"
    done

    for BINARY in "${BINARIES[@]}"; do
        debug "Binary: %s\n" "${BINARY}"
        BIN_PATH=$(which "$BINARY")
        cp "$BIN_PATH" "${CHROOT_DIR}/${BIN_PATH}"

        # Gather Link Libraries for the binary
        local -a BIN_LLIBS
        IFS=$'\n' read -r -d '' -a BIN_LLIBS < <(ldd "$BIN_PATH" |
            perl -ne 'print $1 . "\n" if s/^[^\/]*(\/.*)\(.*$/\1/')

        debug "LLIB for %s: %s\n" "$BINARY" "${BIN_LLIBS[@]}"
        for LLIB in "${BIN_LLIBS[@]}"; do
            cp "${LLIB}" "${CHROOT_DIR}/${LLIB}"
        done

    done

    # [[ ! -d /var/chroot ]] && sudo mkdir -p /var/chroot
    if ! [[ -d /var/chroot ]]; then
        printf "Directory not found.\n"
        printf "Creating the chroot directory (%s)\n" "${CHROOT_DIR}"
        sudo mkdir "${CHROOT_DIR}" || {
            printf >&2 "Failed to create chroot directory: %s\n" "${CHROOT_DIR}"
        }
    fi

    # Create special files
    printf "Making character special files.\n"
    for SPECIAL_FILE in "${SPECIAL_FILES[@]}"; do
        local -a MAJOR_MINOR
        read -r -d '' -a MAJOR_MINOR < <(
            stat "$SPECIAL_FILE" | grep -i 'device type' | awk '{printf $(NF)"\n"}' | tr ',' ' '
        )
        mknod -m 666 "${CHROOT_DIR}/${SPECIAL_FILE}" c "${MAJOR_MINOR[@]}" || { 
            printf >&2 "Failed to create special file: %s\n" "$SPECIAL_FILE";
        }
    done

    # mknod -m 666 "${CHROOT_DIR}/dev/null" c 1 3 || { :;}
    # mknod -m 666 "${CHROOT_DIR}/dev/tty" c 5 0 || { :;}
    # mknod -m 666 "${CHROOT_DIR}/dev/zero" c 1 5 || { :;}
    # mknod -m 666 "${CHROOT_DIR}/dev/random" c 1 8 || { :;}
    # mknod -m 666 "${CHROOT_DIR}/dev/urandom" c 1 9 || { :;}

}

setup-chroot-dir

